board = [
    [1,2,3],
    [4,"X",6],
    [7,8,9]
    ]
def display_board(board):
    # The function accepts one parameter containing the board's current status
    # and prints it out to the console.
    
    # Printing board to the console
    print("+-------+-------+-------+")
    print("|       |       |       |")
    print("|  ",board[0][0],"  |  ",board[0][1],"  |  ",board[0][2],"  |  ")
    print("|       |       |       |")
    print("+-------+-------+-------+")
    print("|       |       |       |")
    print("|  ",board[1][0],"  |  ",board[1][1],"  |  ",board[1][2],"  |  ")
    print("|       |       |       |")
    print("+-------+-------+-------+")
    print("|       |       |       |")
    print("|  ",board[2][0],"  |  ",board[2][1],"  |  ",board[2][2],"  |  ")
    print("|       |       |       |")
    print("+-------+-------+-------+")
    
def enter_move(board):
    # The function accepts the board's current status, asks the user about their move, 
    # checks the input, and updates the board according to the user's decision.
    while True:
        try:
            move = int(input("Enter an integer number (1-9): "))
            while True:
                #print("Wykonanie make_list_of_free")
                free_squares_result, free_num_result = make_list_of_free_fields(board)
                print(free_squares_result)
                if move in free_num_result:
                    # zapisywanie nowego ruchu
                    temp_squ_res = free_squares_result[move-1]
                    print(temp_squ_res)
                    board[temp_squ_res[0]][temp_squ_res[1]] = "O"
                    display_board(board)
                    #draw_move(board)
                    enter_move(board)
                    break
                else:
                    print("This value isn't properly or is already occupied!")
                    move = int(input("Enter an integer number (1-9): "))
            break
        except:
            print("Warning: the value entered is not a valid number. Try again...")



def make_list_of_free_fields(board):
    # The function browses the board and builds a list of all the free squares; 
    # the list consists of tuples, while each tuple is a pair of row and column numbers.
    free_squares_list = []
    free_num = []
    row_col_tuple = ()
    for elem in board:
        for val in elem:
            if val !="X" and val !="O":
                for row, sublist in enumerate(board):
                    if val in sublist:
                        free_num.append(val) 
                        row_col_tuple = (row, sublist.index(val))
                        free_squares_list += (row_col_tuple,)
                        
    return free_squares_list, free_num
def draw_move(board):
    # The function draws the computer's move and updates the board.
    random
    
print("Hello, let's start game!")
display_board(board)
enter_move(board)


